install.packages("devtools")
install.packages("KernSmooth")
library(KernSmooth)
getwd()
setwd("f:\Work\Coursera\R Programming")
setwd("f:/Work/Coursera/R Programming")
getwd()
x <- 4
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
x <- rbind(x,y)
x
View(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
z <- rbind(x,y)
View(z)
x <- list(2, "a", "b", TRUE)
x[[2]]
x[[1]]
x <- 1:4
x
y <- 2
z <- x+y
z
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x>4]
x[x>10]
x[x>10]<-4
x
cls'1'
x <- file.csv("f:/Work/Coursera/R Programming/Week 1 Quiz/hw1_data.csv")
x <- data.csv("f:/Work/Coursera/R Programming/Week 1 Quiz/hw1_data.csv")
x <- read.csv("f:/Work/Coursera/R Programming/Week 1 Quiz/hw1_data.csv")
x
close(x)
x <- read.csv("f:/Work/Coursera/R Programming/Week 1 Quiz/hw1_data.csv", nrows=3)
x
x <- read.csv("f:/Work/Coursera/R Programming/Week 1 Quiz/hw1_data.csv")
x[151:153]
x[[151:153]]
x[[150:152]]
x[[150,]]
x[150,]
x[151,153]
x[151,152]
x[151]
x[151,]
x(c(151,153))
x[c(151,153)]
x[c(151,153),]
x[c(152,153),]
x[47]
x[47,]
x["Ozone"]
oz <- x["Ozone"]
len(oz)
attributes(oz)
n <- is.nan(oz)
n <- is.nan(oz[,])
n
n <- is.nan(oz[,2])
n <- is.nan(oz[,1])
n
n <- is.na(oz[,1])
n
print(n[TRUE])
print(n[,TRUE])
print(n[[TRUE])
print(n[[TRUE]])
print(n[[TRUE,]])
print(n[[,TRUE]])
print(n[TRUE])
print(complete.cases(n))
n
print(complete.cases(oz))
print(sum(complete.cases(oz)))
print(sum(!complete.cases(oz)))
ozWithoutNA <- complete.cases(x[["Ozone"]])
ozWithoutNA
ozWithoutNA <- x[["Ozone"]]
ozWithoutNA
class(ozWithoutNA)
ozWithoutNA <- ozWithoutNA[!is.na(ozWithoutNA)]
ozWithoutNA
mean(ozWithoutNA)
p <-4
class(p)
y <- x["Ozone">31 & "Temp">90]
y
y <- x["Ozone">31 & "Temp">90,]
y
y <- x[,"Ozone">31 & "Temp">90,]
y
subset(x[,"Ozone">31 & "Temp">90])
subset(x["Ozone">31 & "Temp">90])
subset(x[["Ozone">31 & "Temp">90]])
subset(x[["Ozone">31 & "Temp">90,]])
subset(x[["Ozone">31 & "Temp">90]],)
x[["Ozone">31 & "Temp">90,]]
x[[,"Ozone">31 & "Temp">90]]
subset(x, "Ozone">31 & "Temp">90, [,])
subset(x, "Ozone">31 & "Temp">90, ,)
x[[,Ozone>31 & Temp>90]]
subset(x, "Ozone">31 & "Temp">90, ,)
subset(x, "Ozone">31 & "Temp">90, select=[,])
subset(x, "Ozone">31 & "Temp">90, select=c(Ozone, Temp, Solar.R))
subset(x, Ozone>31, select=c(Ozone, Temp, Solar.R))
subset(x, Ozone>31 & Temp>90, select=c(Ozone, Temp, Solar.R))
t <- subset(x, Ozone>31 & Temp>90, select=c(Ozone, Temp, Solar.R))
t
mean(t$Solar.R)
t <- subset(x, Month=6, select=c(Ozone, Temp))
t
mean(t$Temp)
mean(complete.cases(t$Temp))
complete.cases(t$Temp)
mean(t$Temp)
x["Month"==6]
x[,"Month"==6]
x["Month"==6,]
x[Month==6,]
x[Month==6,[,]]
x[Month==6][,]
x[Month==6][]
x["Month"==6][]
x
x[,"Month"==6]
x[,"Month"=6]
x[Month=6][]
x["Month"=6,]
x[Month=6]
t <- subset(x, Month=6, select=c(Ozone, Temp))
t
t <- subset(x, Month==6, select=c(Ozone, Temp))
t
mean(t[Temp])
mean(t$Temp)
t <- subset(x, Month==5, select=c(Ozone, Temp))
max(t$Ozone)
t
good <- complete.cases(t$Ozone)
good
max(t[good,])
t[good]
t[good,]
x[47,]
ozWithoutNA <- complete.cases(x$Ozone)
ozWithoutNA
ozWithoutNA <- x$Ozone
ozWithoutNA
ozWithoutNA <- ozWithoutNA[!is.na(ozWithoutNA)]
mean(ozWithoutNA)
t <- subset(x, Ozone>31 & Temp>90, select=c(Ozone, Temp, Solar.R))
t
mean(Solar.R)
mean(t$Solar.R)
t <- subset(x, Month==6, select=c(Ozone, Temp, Solar.R))
t
mean(t$Temp)
x1 <- c(1,3, 5)
y1 <- c(3, 2, 10)
cbind(x,y)
cbind(x1,y1)
x2 <- list(2, "a", "b", TRUE)
x2[[1]]
x1 <- 1:4
y1 <- 2:3
x1+y1
x<-4
class(x)
x <- c(4, TRUE)
class(x)
savehistory("F:/Work/Coursera/r studio console history.Rhistory")
install.packages("swirl")
R.version.string
library("swirl")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
c(1,2,3,4) + c(0,10,1000)
z*2+1000
my_div
swirl()
1:20
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(, times=40)
rep(0, times=40)
rep(c(0, 1, 2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect<1
tf
nmu_vect>=6
num_vect>=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name <- c(my_char, "Nadya")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep=" ")
paste(c(1:3), c("X", "Y", "Z"), sep="")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z<-rep(NA,100)
z<-rep(NA,1000)
my_data <- sample(c(y,z), 100)
my_na <-is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
s
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2(1:20, 4,5)
my_matrix2 <- matrix(1:20, 4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
setwd("F:/Work/Coursera/R Programming/Week 2/repo/ProgrammingAssignment2")
source("cachematrix.R")
m <- matrix(1:4, 2, 2)
cacheSolve(m)
makeCacheMatrix(m)
cacheSolve(m)
m
cacheSolve(m)
source("cachematrix.R")
m <- matrix(1:4, 2, 2)
makeCacheMatrix(m)
cacheSolve(m)
makeCacheMatrix
cacheSolve(m)
m
m <- makeCacheMatrix(m)
m$get()
m$getinverse()
i <- m$getinverse()
i
source("cachematrix.R")
i <- m$getinverse()
i
source("cachematrix.R")
cacheSolve(m)
m$get()
m <- matrix (1:4, 2,2)
m
a <- makeCacheMatrix(m)
cacheSolve(m)
class(m)
cacheSolve(a)
a %*% cacheSolve(a)
m %*% cacheSolve(a)
